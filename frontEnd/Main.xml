<class>
 <keyword> class </keyword>
 <identifier> Main </identifier>
 <symbol> { </symbol>
 <classVarDec>
  <keyword> static </keyword>
  <keyword> boolean </keyword>
  <identifier> test </identifier>
  <symbol> ; </symbol>
 </classVarDec>
 <subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>  </parameterList>
  <symbol> ) </symbol>
  <subroutineBody>
   <symbol> { </symbol>
   <varDec>
    <keyword> var </keyword>
    <identifier> SquareGame </identifier>
    <identifier> game </identifier>
    <symbol> ; </symbol>
   </varDec>
   <statements>
   </statements>
   <symbol> } </symbol>
  </subroutineBody>
 </subroutineDec>
 <symbol> function </symbol>
 <subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> more </identifier>
  <symbol> ( </symbol>
  <parameterList>  </parameterList>
  <symbol> ) </symbol>
  <subroutineBody>
   <symbol> { </symbol>
   <statements>
   </statements>
   <symbol> } </symbol>
  </subroutineBody>
 </subroutineDec>
 <symbol> function </symbol>
 <keyword> else </keyword>
 <symbol> { </symbol>
 <keyword> let </keyword>
 <identifier> i </identifier>
 <symbol> = </symbol>
 <identifier> i </identifier>
 <symbol> * </symbol>
 <symbol> ( </symbol>
 <symbol> - </symbol>
 <identifier> j </identifier>
 <symbol> ) </symbol>
 <symbol> ; </symbol>
 <keyword> let </keyword>
 <identifier> j </identifier>
 <symbol> = </symbol>
 <identifier> j </identifier>
 <symbol> / </symbol>
 <symbol> ( </symbol>
 <symbol> - </symbol>
 <integerConstant> 2 </integerConstant>
 <symbol> ) </symbol>
 <symbol> ; </symbol>
 <keyword> let </keyword>
 <identifier> i </identifier>
 <symbol> = </symbol>
 <identifier> i </identifier>
 <symbol> | </symbol>
 <identifier> j </identifier>
 <symbol> ; </symbol>
 <symbol> } </symbol>
 <keyword> return </keyword>
 <symbol> ; </symbol>
 <symbol> } </symbol>
 <symbol> } </symbol>
